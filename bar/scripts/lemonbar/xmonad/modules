#!/bin/sh
#vim:filetype=sh
# find dimensions of monitor
. $HOME/.cache/wal/colors.sh
BG=$background
FG=$foreground
HEIGHT=15
ModDist=10
BGtwo=$color8
WIDTH=$( xdpyinfo  | grep -i 'dimensions:' | sed 's:x:\ :' | awk '{print $2}' ) 

BarWidth=500
BarPosX=$( expr "$WIDTH" - $BarWidth )
#FONT="Font Awesome 5 Free Solid:size=9"
FONT="Iosevka Nerd Font:size=10"

sepchar=""
sepcharone="%{F$BG}$sepchar%{F}%{B$BG} "
sepchartwo="%{F$BGtwo}$sepchar%{F}%{B$BGtwo} "
mkdir -p /tmp/xmonad
songfile="/tmp/xmonad/song_xmonad"
timefile="/tmp/xmonad/time_xmonad"
datefile="/tmp/xmonad/date_xmonad"
batfile="/tmp/xmonad/bat_xmonad"
mainfile="/tmp/xmonad/main_xmonad"

_term() { 

  kill -TERM "$child" 2>/dev/null
  kill $(jobs -p)
}

trap _term SIGTERM EXIT





# find dimensions of monitor
WIDTH=$( xdpyinfo  | grep -i 'dimensions:' | sed 's:x:\ :' | awk '{print $2}' ) 
#HEIGHT=$( xdpyinfo  | grep -i 'dimensions:' | sed 's:x:\ :' | awk '{print $3}' ) 


getDate(){
    date  "+%a %d %b"
}
Date(){
	cat $datefile 
}
memusage(){
    free -h | sed -n 2p | awk '{print $3}'
}

getTime() { 
TIME=$( date "+%H:%M" )
HOUR=$( date "+%H") 
#echo -n "$DATETIME"
case $HOUR in
	1|13)  echo -n "$TIME";;
	2|14)  echo -n "$TIME";;
	3|15)  echo -n "$TIME";;
	4|16)  echo -n "$TIME";;
	5|17)  echo -n "$TIME";;
	6|18)  echo -n "$TIME";;
	7|19)  echo -n "$TIME";;
	8|20)  echo -n "$TIME";;
	9|21)  echo -n "$TIME";;
	10|22) echo -n "$TIME";;
	11|23) echo -n "$TIME";;
	0)     echo -n "$TIME";;
esac
#echo "$TIME"
}
Time(){
	cat $timefile 
}

getBattery() {
	STATE=$( acpi | awk '{print $4}' | sed 's/,//')
	#battery_status="$(acpi -b | awk -F '[[:space:]]+|,' '{ print $3 }')"
	#case "$battery_status" in
		#'Charging')
			#echo " %{F#EA7866}$STATE  " ;;
			##echo "%{B#000433} %{F#EA7866}$STATE  " ;;
		#'Discharging')
			#echo " %{F#CE6864}$STATE  " ;;
			##echo "%{B#000433} %{F#CE6864}$STATE  " ;;
		#'Full') 
			#echo " %{F#B5BD68}$STATE  " 
			##echo "%{B#000433} %{F#00FF00}$STATE  " 
	#esac
	echo " %{F#EA7866}$STATE"
}
Battery() {
	cat $batfile 
}
getsetsong() {
	title=$(mpc -f "%title%" | grep -v "playing\|paused\|volume" )
		if [[ $title == "" ]];then
			title=$(mpc -f "%file%" | sed 1q | sed  -e 's:[a-zA-Z0-9]*\/::' | cut -f 1 -d '.')
		fi
	artist=$(mpc -f "%artist%"  | grep -v "playing\|paused\|volume")
	echo -e "$title | $artist"
}
setsong(){
	cat $songfile 
}

getvol(){
	$HOME/scripts/lemonbar/volume
}
#setstate() { 
#state=$(mpc | grep 'playing\|paused' | awk '{print $1}' | sed 's/\[playing\]//' | sed 's/\[paused\]//') 
#echo -e  "%{A:mpc toggle:}$state%{A}"
#}
main(){
	#echo "$(setsong) $sepcharone %{F#FECC6D}⚡%{F}$(Battery) $sepchartwo $(Date) $sepcharone$(Time) " > $mainfile
	echo "%{r}$sepchartwo$(setsong) $sepcharone %{F#FECC6D}⚡%{F}$(Battery) $sepchartwo $(Date) $sepcharone$(Time) " 

}
while true;do
	if pgrep -x mpd >/dev/null || pgrep -x mopidy >/dev/null; then
		getsetsong  > $songfile
		main
		mpc idle >/dev/null 2>&1
	else
		echo "" > $songfile
		sleep 1m  
	fi
done & 


while true;do
	getBattery | tr -d '\n'> $batfile
	getDate | tr -d '\n' > $datefile
	getTime | tr -d '\n'> $timefile
	main
	sleep 1m 
done 
#tail -f /tmp/xmonad/main_xmonad 2>/dev/null |\
